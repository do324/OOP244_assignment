Script started on Wed 01 Aug 2018 10:43:30 PM EDT
[dkim126@mtrx-node01pd m3]$ ms3
Begin Testing the Program!
Empty Product:
       |                    |   0.00|   0|          |   0|
u("4321", "Rice"):
4321   |Rice                |   0.00|   0|          |   0|

Please enter the following information:
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Enter Product Info: 
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Testing:
 s.store(): 
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 t.load(): 
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X(const X&): X v = s
  v: 1234   |Blanket             |  13.94|  12|pair      |  23|
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X& operator=(const X&): u = t
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
 bool operator==(const char*) const: OK
 int operator+=(int): u += 100 
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94| 112|pair      |  23|
 double operator+=(double&, const Product&) : 200 += u
  ?:1761.75 = 1761.75

Please enter the following information:
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Enter Product Info: 
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Testing:
 s.store(): 
  s: 1235   |Jacket              |  12.35|  11|n/a       |  22|
 t.load(): 
  t: 1235   |Jacket              |  13.96|  11|n/a       |  22|
 X(const X&): X v = s
  v: 1235   |Jacket              |  12.35|  11|n/a       |  22|
  s: 1235   |Jacket              |  12.35|  11|n/a       |  22|
 X& operator=(const X&): u = t
  t: 1235   |Jacket              |  13.96|  11|n/a       |  22|
  u: 1235   |Jacket              |  13.96|  11|n/a       |  22|
 bool operator==(const char*) const: OK
 int operator+=(int): u += 100 
  u: 1235   |Jacket              |  13.96|  11|n/a       |  22|
  u: 1235   |Jacket              |  13.96| 111|n/a       |  22|
 double operator+=(double&, const Product&) : 200 += u
  ?:1749.06 = 1749.06

1235	Jacket	n/a	0	12.35	11	22
----The End
End Testing the Program!
[dkim126@mtrx-node01pd m3]$ exit
exit

Script done on Wed 01 Aug 2018 10:44:22 PM EDT
lues carefuly and exactly as instructed.
Press <ENTER> to start...
[H[JFOLLOW THESE INSTRUCTIONS:
1- Type ms3 and hit <ENTER>
2- Use the test data specified in Final Project - Milestone 3 to test the program
3- When done, type exit and hit <ENTER> to continue the submission process.
Script started, file is output.txt
[dkim126@mtrx-node01pd m3]$ ms3
Begin Testing the Program!
Empty Product:
       |                    |   0.00|   0|          |   0|
u("4321", "Rice"):
4321   |Rice                |   0.00|   0|          |   0|

Please enter the following information:
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Enter Product Info: 
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Testing:
 s.store(): 
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 t.load(): 
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X(const X&): X v = s
  v: 1234   |Blanket             |  13.94|  12|pair      |  23|
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X& operator=(const X&): u = t
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
 bool operator==(const char*) const: OK
 int operator+=(int): u += 100 
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94| 112|pair      |  23|
 double operator+=(double&, const Product&) : 200 += u
  ?:1761.75 = 1761.75

Please enter the following information:
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Enter Product Info: 
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Testing:
 s.store(): 
  s: 1235   |Jacket              |  12.35|  11|n/a       |  22|
 t.load(): 
  t: 1235   |Jacket              |  13.96|  11|n/a       |  22|
 X(const X&): X v = s
  v: 1235   |Jacket              |  12.35|  11|n/a       |  22|
  s: 1235   |Jacket              |  12.35|  11|n/a       |  22|
 X& operator=(const X&): u = t
  t: 1235   |Jacket              |  13.96|  11|n/a       |  22|
  u: 1235   |Jacket              |  13.96|  11|n/a       |  22|
 bool operator==(const char*) const: OK
 int operator+=(int): u += 100 
  u: 1235   |Jacket              |  13.96|  11|n/a       |  22|
  u: 1235   |Jacket              |  13.96| 111|n/a       |  22|
 double operator+=(double&, const Product&) : 200 += u
  ?:1749.06 = 1749.06

1235	Jacket	n/a	0	12.35	11	22
----The End
End Testing the Program!
[dkim126@mtrx-node01pd m3]$ exit
exit
Script done, file is output.txt
Success!... Outputs match.

Would you like to submit this demonstration of Final Project - Milestone 3? (Y)es/(N)o: n
Submission aborted by user!
[dkim126@mtrx-node01pd m3]$ ~hong.huang/submit 244_ms3
[H[JSubmitter (V0.97.2)
Submitting Final Project - Milestone 3
g++ -Wall -std=c++0x -o ms3 Product.cpp ErrorState.cpp MyProduct.cpp 244_ms3_tester_prof.cpp 2> error.txt
Success! no errors or warnings...


READ THE FOLLOWING CAREFULLY!
I am about to execute the tester and script the output to "output.txt"
Please enter the values carefuly and exactly as instructed.
Press <ENTER> to start...
[H[JFOLLOW THESE INSTRUCTIONS:
1- Type ms3 and hit <ENTER>
2- Use the test data specified in Final Project - Milestone 3 to test the program
3- When done, type exit and hit <ENTER> to continue the submission process.
Script started, file is output.txt
[dkim126@mtrx-node01pd m3]$ ms3
Begin Testing the Program!
Empty Product:
       |                    |   0.00|   0|          |   0|
u("4321", "Rice"):
4321   |Rice                |   0.00|   0|          |   0|

Please enter the following information:
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Enter Product Info: 
 Sku: 1234
 Name (no spaces): Blanket
 Unit: pair
 Taxed? (y/n): y
 Price: 12.34
 Quantity on hand: 12
 Quantity needed: 23

Testing:
 s.store(): 
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 t.load(): 
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X(const X&): X v = s
  v: 1234   |Blanket             |  13.94|  12|pair      |  23|
  s: 1234   |Blanket             |  13.94|  12|pair      |  23|
 X& operator=(const X&): u = t
  t: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
 bool operator==(const char*) const: OK
 int operator+=(int): u += 100 
  u: 1234   |Blanket             |  13.94|  12|pair      |  23|
  u: 1234   |Blanket             |  13.94| 112|pair      |  23|
 double operator+=(double&, const Product&) : 200 += u
  ?:1761.75 = 1761.75

Please enter the following information:
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Enter Product Info: 
 Sku: 1235
 Name (no spaces): Jacket
 Unit: n/a
 Taxed? (y/n): n
 Price: 12.35
 Quantity on hand: 11
 Quantity needed: 22

Testing:
 s.store(): 
  s: 1235   |Jacket              |  12.35|  11|n/a       |  22|
 t.load(): 
  t: 1235   |Jacket              |  13.96|  11|n/a       |  22|
 X(const X&): X v = s
